load("../cars.RData")
load("../../cars.RData")
y = 100 / cars$CityMPG
x1 = cars$Weight
x2 = cars$Horsepower/cars$Weight
boxplot(cars)
pairs(cars)
cor(cars)
?pairs
?aov
?anova
fit = lm(y ~ x1 + x2, cars)
aov.model = aov(fit)
summary(aov.model)
fit2 = lm(y ~ x2 + x1, cars)
aov.model2 = aov(fit2)
summary(aov.model2)
xtable(summary(aov.model), auto = TRUE)
library(car)
library(xtable)
xtable(summary(aov.model), auto = TRUE)
xtable(summary(aov.model2), auto = TRUE)
fit = lm(y ~ x1 + x2, cars)
aov.model1 = aov(fit)
summary(aov.model)
xtable(summary(aov.model1), auto = TRUE)
fit = lm(y ~ x1 + x2, cars)
aov.model1 = aov(fit)
summary(aov.model1)
xtable(summary(aov.model1), auto = TRUE)
fit2 = lm(y ~ x2 + x1, cars)
aov.model2 = aov(fit2)
summary(aov.model2)
xtable(summary(aov.model2), auto = TRUE)
?anova
anova(fit)
aov(fit)
summary(aov(fit))
summary(anova(fit))
anova(fit)
summary(aov(fit))
anova(fit)
load("../../cars.RData")
library(car)
library(xtable)
#------------------------------
#         Introduction
#------------------------------
y = 100 / cars$CityMPG
x1 = cars$Weight
x2 = cars$Horsepower/cars$Weight
#------------------------------
#          The data
#------------------------------
#TODO ??
#------------------------------
#          Analysis 1
#------------------------------
#Analyse of variance for model 1
fit = lm(y ~ x1 + x2, cars)
aov.model1 = aov(fit)
summary(aov.model1)
xtable(summary(aov.model1), auto = TRUE)
#Analyse of variance with inverted modelanova
fit2 = lm(y ~ x2 + x1, cars)
aov.model2 = aov(fit2)
summary(aov.model2)
xtable(summary(aov.model2), auto = TRUE)
xtable(summary(aov.model1), auto = TRUE)
xtable(summary(aov.model2), auto = TRUE)
summary(aov.model1)
summary(aov.model2)
cars.sub <- data.frame(cars[,11:26])
View(cars.sub)
cars2.sub <- data.frame(cars[,11:26])
full.model <-lm(y~., data = cars.sub)
summary(full.model)
View(cars2.sub)
xstable(summary(full.model))
xstable(summary(full.model))
xtable(summary(full.model))
xtable(summary(full.model), auto = TRUE)
xtable(summary(full.model))
, auto = TRUE
?vif
vif(full.model)
cars.sub = data.frame(cars[,11:26])
full.model = lm(y~., data = cars.sub)
summary(full.model)
xtable(summary(full.model), auto = TRUE)
xtable(summary(full.model))
vif(full.model)
vif(full.model)
xtable(vif(full.model))
summary(vif(full.model))
xtable(vif(full.model))
?xtable
a = vif(full.model)
xtable(a)
a = data.frame(vif(full.model))
xtable(a)
a = data.frame(vif(full.model))
View(a)
View(a)
a
VIF = data.frame(vif(full.model))
xtable(VIF)
vif(full.model)
?step
base.model = lm(y~1, data = cars.sub)
step(full.model, direction = "backward")
a = step(full.model, direction = "backward")
a
base.model = lm(y~1, data = cars.sub)
extend.model = formula(data.frame(y, cars.sub))
fs.model = step(base.model, direction = "forward", scope = extend.model)
fs.model
n = dim(cars)
n = dim(cars)[1]
bd.bic.model = step(full.model, direction = "backward", k = log(n))
fs.bic.model = step(base.model, direction = "forward", scope = extend.model, k = log(n))
bd.bic.model
fs.bic.model
bd.bic.model = step(full.model, direction = "backward", k = log(n))
fs.bic.model = step(base.model, direction = "forward", scope = extend.model, k = log(n))
cars.sub.clean = cars.sub[, -c(7, 9:12)]
cars.sub.clean = cars.sub[, -c(7, 9:12)]
full.model.clean = lm(y~., data = cars.sub.clean)
cars.sub.clean = cars.sub[, -c(7, 9:12)]
full.model.clean = lm(y~., data = cars.sub.clean)
# backward deletion with AIC and clean model
bd.aic.model.clean = step(full.model.clean, direction = "backward")
bd.aic.model.clean
extend.model.clean = formula(data.frame(y, cars.sub.clean))
fs.aic.model.clean = step(base.model, direction = "forward", scope = extend.model.clean)
fs.aic.model.clean
bd.bic.model.clean = step(full.model.clean, direction = "backward", k = log(n))
bd.bic.model.clean
# forward selection with BIC and clean model
fs.bic.model.clean = step(base.model, direction = "forward", scope = extend.model.clean, k = log(n))
fs.bic.model.clean
?cor
cor(cars.sub[, c(7,9:12)])
cor(cars.sub[, c(7,9:12)], y = NULL)
cor(cars.sub[, c(7,9:12)], y = NULL, method = "pearson")
cor = cor(cars.sub[, c(7,9:12)], y = NULL, method = "pearson")
xtable(cor)
?pairs
pairs(cars.sub[, c(7,9:12)])
removal
removal = cars.sub[, c(7,9:12)]
pairs(removal)
cor = cor(removal, y = NULL, method = "pearson")
removal = cars.sub[, c(7,9:12)]
pairs(removal)
cor = cor(removal, y = NULL, method = "pearson")
xtable(cor)
cor
pdf("scatter-plots.pdf")
pairs(removal)
dev.off()
pairs(removal, main = "truc")
removal = cars.sub[, c(7,9:12)]
pdf("scatter-plots.pdf")
pairs(removal)
dev.off()
bd.bic.model
summary(bd.bic.model)
